{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/components/DeveloperConsole.js","BlockNumber.js","Search.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","DeveloperConsole","util","utilCrypto","Main","finalized","useState","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","useEffect","unsubscribeAll","number","toNumber","unsub","catch","timer","time","id","setInterval","clearInterval","Grid","Column","Card","Content","textAlign","Statistic","label","extra","Icon","BlockNumber","Search","blockData","setBlockData","searchParamRef","createRef","isHash","param","startsWith","current","searchParam","searchByHash","tempDate","searchByBlockNumber","Object","fromEntries","block","header","toString","hash","stateRoot","parentHash","extrinsicsRoot","digest","extrinsics","getApi","getBlockHash","blockHash","getBlock","cardStyles","width","Container","style","Header","Form","marginTop","Field","icon","placeholder","ref","Button","primary","onClick","searchBlock","transtions","Table","celled","padded","Row","HeaderCell","singleLine","Body","Cell","loader","text","Dimmer","active","Loader","size","centered","columns","Message","negative","compact","floating","content","JSON","stringify","contextRef","stackable","stretched","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c256243f.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { finalized } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Table, Card, Input, Form, Button, Container } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Search(props) {\n\tconst { api } = useSubstrate();\n\tconst [blockData, setBlockData] = useState(null);\n\tlet searchParamRef = React.createRef();\n\n\tfunction isHash(param) {\n\t\treturn param.startsWith('0x');\n\t}\n\tasync function searchBlock() {\n\t\tconsole.log(searchParamRef.current.value);\n\t\tconst searchParam = searchParamRef.current.value;\n\t\tlet tempDate;\n\t\tif (isHash(searchParam)) {\n\t\t\ttempDate = await searchByHash(searchParam);\n\t\t}\n\t\telse {\n\t\t\ttempDate = await searchByBlockNumber(searchParam);\n\t\t}\n\t\ttempDate = Object.fromEntries(tempDate);\n\t\ttempDate = {\n\t\t\t\"number\": tempDate.block.header.number.toString(),\n\t\t\t\"hash\": tempDate.block.header.hash.toString(),\n\t\t\t\"stateRoot\": tempDate.block.header.stateRoot.toString(),\n\t\t\t\"parentHash\": tempDate.block.header.parentHash.toString(),\n\t\t\t\"extrinsicsRoot\": tempDate.block.header.extrinsicsRoot.toString(),\n\t\t\t\"digest\":tempDate.block.header.digest.toString(),\n\t\t\t\"transtions\": tempDate.block.extrinsics.toString()\n\t\t}\n\t\tsetBlockData(tempDate);\n\t\tconsole.log(blockData);\n\t}\n\tasync function searchByBlockNumber(blockNumber) {\n\t\tconst api = await getApi();\n\t\tconst blockHash = await api.rpc.chain.getBlockHash(blockNumber);\n\t\tconst block = await api.rpc.chain.getBlock(blockHash);\n\t\tconsole.log(`Result for search by number for ${blockNumber} is ${block}`);\n\t\treturn block;\n\t}\n\n\tasync function searchByHash(blockHash) {\n\t\tconst api = await getApi();\n\t\tconst block = await api.rpc.chain.getBlock(blockHash);\n\t\tconsole.log(`Result for search by hash for ${blockHash} is ${block}`);\n\t\tconsole.log(typeof (block));\n\t\tconsole.log(block.block.header);\n\t\treturn block;\n\t}\n\tasync function getApi() {\n\t\treturn api;\n\t}\n\n\tconst cardStyles = {\n\t\twidth: 'auto'\n\t};\n\tconst formStyles = {\n\t\tmarginTop: '15px'\n\t}\n\treturn (\n\t\t<Container>\n\t\t<Card style={cardStyles}>\n\t\t<Card.Content textAlign='center'>\n\t\t<Card.Header>Search for block by Height or Hash</Card.Header>\n\t\t<Form style={formStyles}>\n\t\t<Form.Field>\n\t\t<input icon='search' placeholder='Block Height or Hash...' ref={searchParamRef} />\n\t\t</Form.Field>\n\t\t<Button primary onClick={() => searchBlock()}>Seach</Button>\n\t\t</Form>\n\t\t</Card.Content>\n\t\t</Card >\n\t\t{blockData ?\n\t\t\t<view>\n\t\t\t<Card>\n\t\t\t<Card.Header> digest</Card.Header>\n\t\t\t<text>\n\t\t\t{blockData?.digest}\n\t\t\t</text>\n\t\t\t</Card>\n\t\t\t<Card>\n\t\t\t<Card.Header>Transtions</Card.Header>\n\t\t\t<text>\n\t\t\t{blockData?.transtions}\n\t\t\t</text>\n\t\t\t</Card>\n\t\t\t</view>\n\t\t\t: <span></span>\n\t\t}\n\t\t{blockData ?\n\t\t\t\t<Card style={cardStyles}>\n\t\t\t\t<Card.Content textAlign='center'>\n\t\t\t\t<Card.Header>Searched Block Data</Card.Header>\n\t\t\t\t<Table celled padded>\n\t\t\t\t<Table.Header>\n\t\t\t\t<Table.Row>\n\t\t\t\t<Table.HeaderCell singleLine>Key</Table.HeaderCell>\n\t\t\t\t<Table.HeaderCell>Value</Table.HeaderCell>\n\t\t\t\t</Table.Row>\n\t\t\t\t</Table.Header>\n\t\t\t\t<Table.Body>\n\t\t\t\t<Table.Row>\n\t\t\t\t<Table.Cell>\n\t\t\t\tBlock Number\n\t\t\t\t</Table.Cell>\n\t\t\t\t<Table.Cell>\n\t\t\t\t{blockData?.number}\n\t\t\t\t</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t\t<Table.Row>\n\t\t\t\t<Table.Cell>\n\t\t\t\tBlock Hash\n\t\t\t\t</Table.Cell>\n\t\t\t\t<Table.Cell>\n\t\t\t\t{blockData?.hash}\n\t\t\t\t</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t\t<Table.Row>\n\t\t\t\t<Table.Cell>\n\t\t\t\tParent Hash\n\t\t\t\t</Table.Cell>\n\t\t\t\t<Table.Cell>\n\t\t\t\t{blockData?.parentHash}\n\t\t\t\t</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t\t<Table.Row>\n\t\t\t\t<Table.Cell>\n\t\t\t\tState Root\n\t\t\t\t</Table.Cell>\n\t\t\t\t<Table.Cell>\n\t\t\t\t{blockData?.stateRoot}\n\t\t\t\t</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t\t<Table.Row>\n\t\t\t\t<Table.Cell>\n\t\t\t\tExtrinsics Root\n\t\t\t\t</Table.Cell>\n\t\t\t\t<Table.Cell>\n\t\t\t\t{blockData?.extrinsicsRoot}\n\t\t\t\t</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t\t: <span></span>\n\t\t}\n\t\t</Container>\n\t);\n}\n\nexport default Search;\n\n","import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport BlockNumber from './BlockNumber';\nimport Search from './Search';\n\nfunction Main () {\n\tconst [accountAddress, setAccountAddress] = useState(null);\n\tconst { apiState, keyring, keyringState, apiError } = useSubstrate();\n\tconst loader = text =>\n\t\t<Dimmer active>\n\t\t\t<Loader size='small'>{text}</Loader>\n\t\t\t</Dimmer>;\n\n\tconst message = err =>\n\t\t<Grid centered columns={2} padded>\n\t\t\t<Grid.Column>\n\t\t\t<Message negative compact floating\n\theader='Error Connecting to Substrate'\n\tcontent={`${JSON.stringify(err, null, 4)}`}\n\t\t/>\n\t\t</Grid.Column>\n\t\t</Grid>;\n\n\tif (apiState === 'ERROR') return message(apiError);\n\telse if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n\tif (keyringState !== 'READY') {\n\t\treturn loader('Loading accounts (please review any extension\\'s authorization)');\n\t}\n\n\tconst contextRef = createRef();\n\n\treturn (\n\t\t<div ref={contextRef}>\n\t\t<Container>\n\t\t<Grid stackable columns='equal'>\n\t\t<Grid.Row stretched>\n\t\t<BlockNumber />\n\t\t<BlockNumber finalized />\n\t\t</Grid.Row>\n\t\t</Grid>\n\t\t<Search />\n\t\t</Container>\n\t\t<DeveloperConsole />\n\t\t</div>\n\t);\n}\n\nexport default function App () {\n\treturn (\n\t\t<SubstrateContextProvider>\n\t\t<Main />\n\t\t</SubstrateContextProvider>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}