{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/components/DeveloperConsole.js","BlockNumber.js","SearchBlock.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","DeveloperConsole","util","utilCrypto","Main","finalized","useState","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","useEffect","unsubscribeAll","number","toNumber","unsub","catch","timer","time","id","setInterval","clearInterval","Grid","Column","Card","Content","textAlign","Statistic","label","extra","Icon","BlockNumber","SearchBlock","blockData","setBlockData","searchParamRef","createRef","isHash","param","startsWith","current","searchParam","searchByHash","tempDate","searchByBlockNumber","Object","fromEntries","block","header","toString","hash","digest","stateRoot","parentHash","extrinsicsRoot","transtions","extrinsics","getApi","getBlockHash","blockHash","getBlock","cardStyles","width","Container","style","Header","Form","marginTop","Field","icon","placeholder","ref","Button","primary","onClick","searchBlock","numberOfLines","Table","celled","padded","Row","HeaderCell","singleLine","Body","Cell","loader","text","Dimmer","active","Loader","size","centered","columns","Message","negative","compact","floating","content","JSON","stringify","contextRef","Sticky","context","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d70b5889.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { finalized } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Card, Input, Form, Button, Container } from 'semantic-ui-react';\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\nfunction SearchBlock (props) {\r\n  const { api } = useSubstrate();\r\n  const [blockData, setBlockData] = useState(null);\r\n  const searchParamRef = React.createRef();\r\n\r\n  function isHash (param) {\r\n    return param.startsWith('0x');\r\n  }\r\n\r\n  async function searchBlock () {\r\n    console.log(searchParamRef.current.value);\r\n    const searchParam = searchParamRef.current.value;\r\n    let tempDate;\r\n    if (isHash(searchParam)) {\r\n      tempDate = await searchByHash(searchParam);\r\n    } else {\r\n      tempDate = await searchByBlockNumber(searchParam);\r\n    }\r\n    tempDate = Object.fromEntries(tempDate);\r\n    tempDate = {\r\n      number: tempDate.block.header.number.toString(),\r\n      hash: tempDate.block.header.hash.toString(),\r\n      digest: tempDate.block.header.digest.toString(),\r\n      stateRoot: tempDate.block.header.stateRoot.toString(),\r\n      parentHash: tempDate.block.header.parentHash.toString(),\r\n      extrinsicsRoot: tempDate.block.header.extrinsicsRoot.toString(),\r\n      transtions: tempDate.block.extrinsics.toString()\r\n    };\r\n    setBlockData(tempDate);\r\n    console.log(blockData);\r\n  }\r\n  async function searchByBlockNumber (blockNumber) {\r\n    const api = await getApi();\r\n    const blockHash = await api.rpc.chain.getBlockHash(blockNumber);\r\n    const block = await api.rpc.chain.getBlock(blockHash);\r\n    console.log(`Result for search by number for ${blockNumber} is ${block}`);\r\n    return block;\r\n  }\r\n\r\n  async function searchByHash (blockHash) {\r\n    const api = await getApi();\r\n    const block = await api.rpc.chain.getBlock(blockHash);\r\n    console.log(`Result for search by hash for ${blockHash} is ${block}`);\r\n    console.log(typeof (block));\r\n    console.log(block.block.header);\r\n    return block;\r\n  }\r\n  async function getApi () {\r\n    return api;\r\n  }\r\n\r\n  const cardStyles = {\r\n    width: 'auto'\r\n  };\r\n  const formStyles = {\r\n    marginTop: '15px'\r\n\r\n  };\r\n  const digestStyles = { \r\n    numberOfLines: '10'\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Card style={cardStyles}>\r\n        <Card.Content textAlign='center'>\r\n          <Card.Header>Search for block by Height or Hash</Card.Header>\r\n          <Form style={formStyles}>\r\n            <Form.Field>\r\n              <input icon='search' placeholder='Block Height or Hash...' ref={searchParamRef} />\r\n            </Form.Field>\r\n            <Button primary onClick={() => searchBlock()}>Seach</Button>\r\n          </Form>\r\n        </Card.Content>\r\n\r\n      </Card >\r\n      {blockData\r\n        ? <view>\r\n          <text style={digestStyles}>\r\n          {blockData?.digest}\r\n          </text>\r\n        </view>\r\n         :<span></span>\r\n      }\r\n      {blockData\r\n        ? <Card style={cardStyles}>\r\n          <Card.Content textAlign='center'>\r\n            <Card.Header>Searched Block Data</Card.Header>\r\n            <Table celled padded>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell singleLine>Key</Table.HeaderCell>\r\n                  <Table.HeaderCell>Value</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                <Table.Row>\r\n                  <Table.Cell>\r\n\t\t\tBlock Number\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {blockData?.number}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n\r\n                <Table.Row>\r\n                  <Table.Cell>\r\n\t\t\tBlock Hash\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {blockData?.hash}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>\r\n\t\t\tParent Hash\r\n                  </Table.Cell>\r\n                  <Table.Cell >\r\n                    {blockData?.parentHash}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>\r\n\t\t\tState Root\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {blockData?.stateRoot}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>\r\n\t\t\tExtrinsics Root\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {blockData?.extrinsicsRoot}\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </Card.Content>\r\n        </Card>\r\n    \r\n        : <span></span>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchBlock;\r\n","import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\nimport BlockNumber from './BlockNumber';\nimport SearchBlock from './SearchBlock';\n\nfunction Main () {\n\tconst [accountAddress, setAccountAddress] = useState(null);\n\tconst { apiState, keyring, keyringState, apiError } = useSubstrate();\n\n\tconst loader = text =>\n\t\t<Dimmer active>\n\t\t\t<Loader size='small'>{text}</Loader>\n\t\t\t</Dimmer>;\n\n\tconst message = err =>\n\t\t<Grid centered columns={2} padded>\n\t\t\t<Grid.Column>\n\t\t\t<Message negative compact floating\n\theader='Error Connecting to Substrate'\n\tcontent={`${JSON.stringify(err,null,4)}`}\n\t\t/>\n\t\t</Grid.Column>\n\t\t</Grid>;\n\n\tif (apiState === 'ERROR') return message(apiError);\n\telse if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n\tif (keyringState !== 'READY') {\n\t\treturn loader('Loading accounts (please review any extension\\'s authorization)');\n\t}\n\n\tconst contextRef = createRef();\n\n\treturn (\n\t\t<div ref={contextRef}>\n\t\t<Sticky context={contextRef}>\n\t\t</Sticky>\n\t\t<Container>\n\t\t<Grid  columns='equal'>\n\t\t<BlockNumber />\n\t\t<BlockNumber finalized />\n\t\t</Grid>\n\t\t<SearchBlock/>\n\t\t</Container>\n\t\t<DeveloperConsole />\n\t\t</div>\n\t);\n}\n\nexport default function App () {\n\treturn (\n\t\t<SubstrateContextProvider>\n\t\t<Main />\n\t\t</SubstrateContextProvider>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}